const { createClient } = require('@supabase/supabase-js')

// Configuraci√≥n de Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Error: Variables de entorno de Supabase no encontradas')
  console.log('Aseg√∫rate de tener configurado el archivo .env.local con:')
  console.log('- NEXT_PUBLIC_SUPABASE_URL')
  console.log('- SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

const testMemorials = [
  {
    primer_nombre: 'Mar√≠a',
    segundo_nombre: 'Isabel',
    apellido_paterno: 'Gonz√°lez',
    apellido_materno: 'L√≥pez',
    fecha_nacimiento: '1950-03-15',
    fecha_fallecimiento: '2023-12-10',
    biografia: 'Mar√≠a Isabel fue una mujer extraordinaria que dedic√≥ su vida a su familia y a ayudar a los dem√°s. Siempre ten√≠a una sonrisa en su rostro y un consejo sabio para quien lo necesitara.',
    comentarios: 'Te extra√±amos cada d√≠a, mam√°. Tu amor y sabidur√≠a siguen gui√°ndonos.',
    logros: 'Fundadora de la Asociaci√≥n de Mujeres Emprendedoras, Premio al M√©rito Comunitario 2018',
    foto: null
  },
  {
    primer_nombre: 'Carlos',
    segundo_nombre: 'Alberto',
    apellido_paterno: 'Rodr√≠guez',
    apellido_materno: 'Mart√≠nez',
    fecha_nacimiento: '1945-07-22',
    fecha_fallecimiento: '2023-08-05',
    biografia: 'Carlos Alberto fue un hombre trabajador y dedicado que construy√≥ un legado de honestidad y esfuerzo. Su pasi√≥n por la m√∫sica y la literatura inspir√≥ a muchas generaciones.',
    comentarios: 'Pap√°, tu ejemplo de vida nos sigue inspirando cada d√≠a.',
    logros: 'Ingeniero Civil con m√°s de 30 a√±os de experiencia, M√∫sico aficionado, Premio al Mejor Padre 2020',
    foto: null
  },
  {
    primer_nombre: 'Ana',
    segundo_nombre: 'Sof√≠a',
    apellido_paterno: 'Hern√°ndez',
    apellido_materno: 'Garc√≠a',
    fecha_nacimiento: '1980-11-08',
    fecha_fallecimiento: '2023-05-20',
    biografia: 'Ana Sof√≠a fue una joven brillante que dedic√≥ su vida a la medicina y al cuidado de los dem√°s. Su sonrisa iluminaba cualquier habitaci√≥n y su compasi√≥n no conoc√≠a l√≠mites.',
    comentarios: 'Hermana querida, tu luz sigue brillando en nuestros corazones.',
    logros: 'M√©dica especialista en pediatr√≠a, Voluntaria en organizaciones ben√©ficas, Premio al M√©rito M√©dico 2022',
    foto: null
  }
]

async function createTestMemorials() {
  console.log('üîÑ Creando memoriales de prueba...')
  console.log('=====================================')
  
  try {
    // Verificar conexi√≥n
    console.log('\n1Ô∏è‚É£ Verificando conexi√≥n a Supabase...')
    const { data: testData, error: testError } = await supabase
      .from('user_roles')
      .select('id')
      .limit(1)
    
    if (testError) {
      console.error('‚ùå Error de conexi√≥n:', testError)
      return
    }
    console.log('‚úÖ Conexi√≥n a Supabase exitosa')

    // Verificar tabla plantillas
    console.log('\n2Ô∏è‚É£ Verificando tabla plantillas...')
    const { data: tableData, error: tableError } = await supabase
      .from('plantillas')
      .select('id')
      .limit(1)
    
    if (tableError) {
      console.error('‚ùå Error con tabla plantillas:', tableError)
      console.log('üîß Verifica que la tabla plantillas existe en tu base de datos')
      return
    }
    console.log('‚úÖ Tabla plantillas existe y es accesible')

    // Insertar memoriales de prueba
    console.log('\n3Ô∏è‚É£ Insertando memoriales de prueba...')
    
    for (let i = 0; i < testMemorials.length; i++) {
      const memorial = testMemorials[i]
      console.log(`   Insertando memorial ${i + 1}/${testMemorials.length}: ${memorial.primer_nombre} ${memorial.apellido_paterno}`)
      
      const { data, error } = await supabase
        .from('plantillas')
        .insert(memorial)
        .select()
        .single()
      
      if (error) {
        console.error(`   ‚ùå Error insertando memorial ${i + 1}:`, error)
      } else {
        console.log(`   ‚úÖ Memorial ${i + 1} creado exitosamente (ID: ${data.id})`)
      }
    }

    // Verificar memoriales creados
    console.log('\n4Ô∏è‚É£ Verificando memoriales creados...')
    const { data: allMemorials, error: verifyError } = await supabase
      .from('plantillas')
      .select('id, primer_nombre, apellido_paterno')
      .order('created_at', { ascending: false })
      .limit(10)
    
    if (verifyError) {
      console.error('‚ùå Error verificando memoriales:', verifyError)
    } else {
      console.log(`‚úÖ Total de memoriales en la base de datos: ${allMemorials.length}`)
      console.log('üìã Memoriales disponibles:')
      allMemorials.forEach((memorial, index) => {
        console.log(`   ${index + 1}. ${memorial.primer_nombre} ${memorial.apellido_paterno} (ID: ${memorial.id})`)
      })
    }

    console.log('\nüéØ Resumen:')
    console.log('‚úÖ Memoriales de prueba creados')
    console.log('üí° Ahora puedes:')
    console.log('   1. Ir a la p√°gina /buscar')
    console.log('   2. Buscar por nombre (ej: "Mar√≠a", "Carlos", "Ana")')
    console.log('   3. Ver los memoriales en la aplicaci√≥n web')

  } catch (error) {
    console.error('‚ùå Error general:', error)
  }
}

createTestMemorials() 