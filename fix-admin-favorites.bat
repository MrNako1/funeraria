@echo off
echo ========================================
echo Corrigiendo politicas RLS para admins
echo ========================================

echo.
echo üîß Aplicando correcci√≥n de pol√≠ticas RLS...

echo.
echo 1. Verificando conexi√≥n a Supabase...
node -e "
require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
);

async function fixAdminPolicies() {
  try {
    console.log('üîç Verificando pol√≠ticas actuales...');
    
    // Ejecutar la migraci√≥n SQL
    const { data, error } = await supabase.rpc('exec_sql', {
      sql: `
        -- Eliminar pol√≠ticas existentes de admin si existen
        DROP POLICY IF EXISTS \"Admins can view all favorites\" ON public.memorial_favorites;
        DROP POLICY IF EXISTS \"Admins can delete any favorites\" ON public.memorial_favorites;

        -- Crear pol√≠ticas corregidas para administradores
        CREATE POLICY \"Admins can view all favorites\" ON public.memorial_favorites
            FOR SELECT USING (
                EXISTS (
                    SELECT 1 FROM public.user_roles 
                    WHERE user_id = auth.uid() AND role = 'admin'
                )
            );

        CREATE POLICY \"Admins can insert any favorites\" ON public.memorial_favorites
            FOR INSERT WITH CHECK (
                EXISTS (
                    SELECT 1 FROM public.user_roles 
                    WHERE user_id = auth.uid() AND role = 'admin'
                )
            );

        CREATE POLICY \"Admins can delete any favorites\" ON public.memorial_favorites
            FOR DELETE USING (
                EXISTS (
                    SELECT 1 FROM public.user_roles 
                    WHERE user_id = auth.uid() AND role = 'admin'
                )
            );
      `
    });

    if (error) {
      console.log('‚ö†Ô∏è No se pudo ejecutar SQL directamente, intentando m√©todo alternativo...');
      console.log('Error:', error.message);
      
      // M√©todo alternativo: verificar si las pol√≠ticas existen
      console.log('‚ÑπÔ∏è Verifica manualmente en Supabase Dashboard:');
      console.log('1. Ve a Authentication > Policies');
      console.log('2. Busca la tabla memorial_favorites');
      console.log('3. Aseg√∫rate de que existan estas pol√≠ticas:');
      console.log('   - Admins can view all favorites');
      console.log('   - Admins can insert any favorites');
      console.log('   - Admins can delete any favorites');
    } else {
      console.log('‚úÖ Pol√≠ticas RLS corregidas exitosamente');
    }
    
  } catch (err) {
    console.error('‚ùå Error:', err.message);
  }
}

fixAdminPolicies();
"

echo.
echo 2. Verificando que la correcci√≥n se aplic√≥...
echo.
echo üìã Instrucciones para verificar manualmente:
echo.
echo 1. Ve a tu proyecto Supabase Dashboard
echo 2. Navega a Authentication > Policies
echo 3. Busca la tabla 'memorial_favorites'
echo 4. Verifica que existan estas pol√≠ticas:
echo    - Admins can view all favorites
echo    - Admins can insert any favorites (NUEVA)
echo    - Admins can delete any favorites
echo.
echo 5. Si no existe la pol√≠tica de INSERT para admins:
echo    - Haz clic en 'New Policy'
echo    - Nombre: 'Admins can insert any favorites'
echo    - Target roles: 'authenticated'
echo    - Using expression: EXISTS (SELECT 1 FROM public.user_roles WHERE user_id = auth.uid() AND role = 'admin')
echo    - Policy definition: INSERT
echo.
echo 6. Prueba el bot√≥n de favoritos nuevamente
echo.

echo ========================================
echo Correcci√≥n completada
echo ========================================
echo.
pause 